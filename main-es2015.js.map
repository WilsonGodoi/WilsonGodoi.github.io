{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/resources/services/language.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { LanguageService } from './resources/services/language.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private languageService: LanguageService) {}\n\n  setLanguage(language: string): void {\n    this.languageService.setLanguage(language);\n  }\n}\n","<header fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap>\n  <span>\n    <!-- <button\n      mat-mini-fab\n      color=\"primary\"\n      aria-label=\"Example icon button with a menu icon\"\n    >\n      <mat-icon>menu</mat-icon>\n    </button> -->\n  </span>\n  <span style=\"padding-top: 5px;\">\n    <a (click)=\"setLanguage('pt')\">\n      <img\n        alt=\"portuguese flag\"\n        src=\"assets/pt-flag.png\"\n        height=\"25\"\n        width=\"40\"\n      />\n    </a>\n    <a (click)=\"setLanguage('es')\">\n      <img alt=\"spanish flag\" src=\"assets/es-flag.png\" height=\"25\" width=\"40\" />\n    </a>\n    <a (click)=\"setLanguage('en')\">\n      <img alt=\"english flag\" src=\"assets/en-flag.png\" height=\"25\" width=\"40\" />\n    </a>\n  </span>\n</header>\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LanguageService } from '../resources/services/language.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  title = 'Olá, eu sou ';\n  subtitle = `Sou desenvolvedor web.\n  Atualmente trabalho desenvolvendo aplicações web utilizando Angular.\n  Tenho sólidos conhecimentos em Typescript, Javascript, HTML5, CSS3.`;\n\n  constructor(private languageService: LanguageService) {}\n\n  ngOnInit(): void {\n    this.languageService.getLanguage().subscribe((data) => {\n      if (data === 'pt') {\n        this.title = 'Olá, eu sou ';\n        this.subtitle = `Sou desenvolvedor web.\n        Atualmente trabalho desenvolvendo aplicações web utilizando Angular.\n        Tenho sólidos conhecimentos em Typescript, Javascript, HTML5, CSS3.`;\n      } else if (data === 'es') {\n        this.title = `Hola, yo soy `;\n        this.subtitle = `Soy un desarrollador web.\n        Actualmente trabajo desarrollando aplicaciones web usando Angular.\n        Tengo sólidos conocimientos en Typescript, Javascript, HTML5, CSS3.\n        `;\n      } else if (data === 'en') {\n        this.title = `Hello, I'm `;\n        this.subtitle = `I'm a web developer.\n        I currently work developing web applications using Angular.\n        I have solid knowledge in Typescript, Javascript, HTML5, CSS3.`;\n      }\n    });\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center\">\n  <div class=\"content text-center\">\n    {{ title }}<span>Wilson Godoi</span>.<br /><br />\n    {{ subtitle }}\n  </div>\n  <footer>\n    <a\n      href=\"https://twitter.com/wilsonggodoi/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      ><i class=\"fa-2x fab fa-twitter social-media\"></i\n    ></a>\n    &nbsp;\n    <a\n      href=\"https://github.com/WilsonGodoi\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      ><i class=\"fa-2x fab fa-github social-media\"></i\n    ></a>\n    &nbsp;\n    <a\n      href=\"https://www.linkedin.com/in/wilson-godoi-6bb29a128/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <i class=\"fa-2x fab fa-linkedin social-media\"></i\n    ></a>\n  </footer>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LanguageService {\n  public language = new Subject<string>();\n\n  constructor() {}\n\n  getLanguage(): Observable<string> {\n    return this.language.asObservable();\n  }\n\n  setLanguage(value: string) {\n    this.language.next(value);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}